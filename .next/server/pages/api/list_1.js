"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/list_1";
exports.ids = ["pages/api/list_1"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "cheerio":
/*!**************************!*\
  !*** external "cheerio" ***!
  \**************************/
/***/ ((module) => {

module.exports = import("cheerio");;

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Flist_1&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Flist_1.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Flist_1&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Flist_1.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_list_1_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/list_1.ts */ \"(api)/./pages/api/list_1.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_list_1_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_list_1_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_list_1_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_list_1_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/list_1\",\n        pathname: \"/api/list_1\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_list_1_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmxpc3RfMSZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGbGlzdF8xLnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ2tEO0FBQ2xEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxpREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsaURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9vbHMtYXBwcy1yZWJvb3RzLz8yM2FhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvbGlzdF8xLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbGlzdF8xXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvbGlzdF8xXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Flist_1&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Flist_1.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/list_1.ts":
/*!*****************************!*\
  !*** ./pages/api/list_1.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var cheerio__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cheerio */ \"cheerio\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__, cheerio__WEBPACK_IMPORTED_MODULE_1__]);\n([axios__WEBPACK_IMPORTED_MODULE_0__, cheerio__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nasync function getKeywordSearchCount(keyword) {\n    const API_KEY = process.env.NAVER_AD_API_KEY;\n    const SECRET_KEY = process.env.NAVER_AD_SECRET_KEY;\n    const CUSTOMER_ID = process.env.NAVER_AD_CUSTOMER_ID;\n    const BASE_URL = \"https://api.naver.com\";\n    const uri = \"/keywordstool\";\n    const method = \"GET\";\n    const timestamp = String(Date.now());\n    const keywordNoSpace = keyword.replace(/\\s/g, \"\");\n    const params = {\n        hintKeywords: keywordNoSpace\n    };\n    const message = `${timestamp}.${method}.${uri}`;\n    const crypto = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! crypto */ \"crypto\", 23));\n    const hmac = crypto.createHmac(\"sha256\", SECRET_KEY);\n    hmac.update(message);\n    const signature = hmac.digest(\"base64\");\n    const headers = {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        \"X-Timestamp\": timestamp,\n        \"X-API-KEY\": API_KEY,\n        \"X-Customer\": CUSTOMER_ID,\n        \"X-Signature\": signature\n    };\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(BASE_URL + uri, {\n            params,\n            headers\n        });\n        const data = response.data;\n        const keywordList = data.keywordList || [];\n        const mainKeyword = keywordList.find((k)=>k.relKeyword === keywordNoSpace) || keywordList[0] || {};\n        return [\n            mainKeyword,\n            keywordList.slice(0, 10)\n        ];\n    } catch (error) {\n        return [\n            {},\n            []\n        ];\n    }\n}\nasync function getDocsCount(keyword) {\n    const client_id = process.env.NAVER_BLOG_CLIENT_ID;\n    const client_secret = process.env.NAVER_BLOG_CLIENT_SECRET;\n    const url = `https://openapi.naver.com/v1/search/blog?query=${encodeURIComponent(keyword)}`;\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(url, {\n            headers: {\n                \"X-Naver-Client-Id\": client_id,\n                \"X-Naver-Client-Secret\": client_secret\n            }\n        });\n        return {\n            totaldoc: response.data.total || 0\n        };\n    } catch (error) {\n        return {\n            totaldoc: 0\n        };\n    }\n}\nasync function getBlogPC10(keyword) {\n    const client_id = process.env.NAVER_BLOG_CLIENT_ID;\n    const client_secret = process.env.NAVER_BLOG_CLIENT_SECRET;\n    const url = `https://openapi.naver.com/v1/search/blog?query=${encodeURIComponent(keyword)}`;\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(url, {\n            headers: {\n                \"X-Naver-Client-Id\": client_id,\n                \"X-Naver-Client-Secret\": client_secret\n            }\n        });\n        return response.data.items.map((blog)=>{\n            const link = blog.link;\n            const title = blog.title.replace(/<[^>]*>/g, \"\").trim();\n            let date = \"\";\n            if (blog.postdate && /^\\d{8}$/.test(blog.postdate)) {\n                date = new Date(blog.postdate.slice(0, 4) + \"-\" + blog.postdate.slice(4, 6) + \"-\" + blog.postdate.slice(6, 8)).toISOString().split(\"T\")[0];\n            } else {\n                date = \"\";\n            }\n            const bloggerName = blog.bloggername.slice(0, 6);\n            const blogType = link.includes(\"naver\") ? \"N\" : link.includes(\"tistory\") ? \"T\" : link.includes(\"daum\") ? \"D\" : \"E\";\n            return {\n                블로그링크: link,\n                블로그제목: title,\n                발행날짜: date,\n                블로그타입: blogType,\n                블로그이름: bloggerName\n            };\n        });\n    } catch (error) {\n        return [];\n    }\n}\nasync function getDatalabData(keyword) {\n    const client_id = process.env.NAVER_DATALAB_CLIENT_ID;\n    const client_secret = process.env.NAVER_DATALAB_CLIENT_SECRET;\n    const url = \"https://openapi.naver.com/v1/datalab/search\";\n    const monthAgo = new Date();\n    monthAgo.setDate(monthAgo.getDate() - 30);\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    const body = {\n        startDate: monthAgo.toISOString().split(\"T\")[0],\n        endDate: yesterday.toISOString().split(\"T\")[0],\n        timeUnit: \"date\",\n        keywordGroups: [\n            {\n                groupName: keyword,\n                keywords: [\n                    keyword\n                ]\n            }\n        ]\n    };\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(url, body, {\n            headers: {\n                \"X-Naver-Client-Id\": client_id,\n                \"X-Naver-Client-Secret\": client_secret,\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return response.data;\n    } catch (error) {\n        return {\n            results: [\n                {\n                    data: []\n                }\n            ]\n        };\n    }\n}\nasync function getTabOrderPC(keyword) {\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(`https://search.naver.com/search.naver?query=${encodeURIComponent(keyword)}`, {\n            headers: {\n                \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\"\n            }\n        });\n        const $ = cheerio__WEBPACK_IMPORTED_MODULE_1__.load(response.data);\n        const sections = [];\n        $(\".main_pack section h2\").each((i, el)=>{\n            let title = $(el).text().trim();\n            if (title) sections.push(title);\n        });\n        const result = {};\n        const tabsToFind = [\n            \"VIEW\",\n            \"지식iN\",\n            \"쇼핑\",\n            \"뉴스\",\n            \"동영상\",\n            \"이미지\",\n            \"블로그\",\n            \"카페\"\n        ];\n        tabsToFind.forEach((tab)=>{\n            const foundIndex = sections.findIndex((s)=>s.includes(tab));\n            result[tab] = foundIndex !== -1 ? foundIndex + 1 : \"X\";\n        });\n        return result;\n    } catch (error) {\n        return {};\n    }\n}\nasync function getTabOrderMO(keyword) {\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(`https://m.search.naver.com/search.naver?query=${encodeURIComponent(keyword)}`, {\n            headers: {\n                \"User-Agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 13_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1.1 Mobile/15E148 Safari/604.1\"\n            }\n        });\n        const $ = cheerio__WEBPACK_IMPORTED_MODULE_1__.load(response.data);\n        const sections = [];\n        $(\"#container section h2\").each((i, el)=>{\n            let title = $(el).text().trim();\n            if (title) sections.push(title);\n        });\n        const result = {};\n        const tabsToFind = [\n            \"VIEW\",\n            \"지식iN\",\n            \"쇼핑\",\n            \"뉴스\",\n            \"동영상\",\n            \"이미지\",\n            \"블로그\",\n            \"카페\"\n        ];\n        tabsToFind.forEach((tab)=>{\n            const foundIndex = sections.findIndex((s)=>s.includes(tab));\n            result[tab] = foundIndex !== -1 ? foundIndex + 1 : \"X\";\n        });\n        return result;\n    } catch (error) {\n        return {};\n    }\n}\nasync function handler(req, res) {\n    try {\n        const keyword = req.query.keyword_give;\n        if (!keyword) {\n            return res.status(400).json({\n                error: \"No keyword provided\"\n            });\n        }\n        const [keywordAmountRaw, keywordAmount10Raw] = await getKeywordSearchCount(keyword);\n        console.log(\"NAVER_AD_API 응답:\", keywordAmountRaw, keywordAmount10Raw);\n        const docsAmountRaw = await getDocsCount(keyword);\n        console.log(\"NAVER_BLOG_API 응답:\", docsAmountRaw);\n        const blogPC10Raw = await getBlogPC10(keyword);\n        console.log(\"NAVER_BLOG_PC10 응답:\", blogPC10Raw);\n        const datalab30Raw = await getDatalabData(keyword);\n        console.log(\"NAVER_DATALAB 응답:\", datalab30Raw);\n        const vwjsPCRaw = await getTabOrderPC(keyword);\n        const vwjsMORaw = await getTabOrderMO(keyword);\n        const keywordAmount = keywordAmountRaw || {};\n        const relKeyword = keywordAmount.relKeyword || \"\";\n        const monthlyPcQcCnt = keywordAmount.monthlyPcQcCnt || 0;\n        const monthlyMobileQcCnt = keywordAmount.monthlyMobileQcCnt || 0;\n        const monthlySumQcCnt = monthlyPcQcCnt + monthlyMobileQcCnt;\n        const keywordAmount10 = Array.isArray(keywordAmount10Raw) ? keywordAmount10Raw : [];\n        const docsAmount = docsAmountRaw || {};\n        const totalDoc = docsAmount.totaldoc || 0;\n        const blogPC10 = Array.isArray(blogPC10Raw) ? blogPC10Raw : [];\n        const blogPcType = blogPC10.map((b)=>b.블로그타입 || \"\").join(\"\");\n        const datalab30 = datalab30Raw || {\n            results: [\n                {\n                    data: []\n                }\n            ]\n        };\n        const vwjsPC = vwjsPCRaw || {};\n        const vwjsMO = vwjsMORaw || {};\n        res.json({\n            debug: {\n                keywordAmountRaw,\n                keywordAmount10Raw,\n                docsAmountRaw,\n                blogPC10Raw,\n                datalab30Raw\n            },\n            keyword_amount: {\n                relKeyword,\n                monthlyPcQcCnt,\n                monthlyMobileQcCnt,\n                monthlySumQcCnt\n            },\n            keyword_amount_10: keywordAmount10,\n            docs_amount: {\n                totaldoc: totalDoc\n            },\n            blog_pc_10: blogPC10,\n            vwjs_PC: vwjsPC,\n            vwjs_MO: vwjsMO,\n            datalab_30: datalab30\n        });\n    } catch (error) {\n        if (axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isAxiosError(error)) {\n            console.error(\"NAVER API ERROR:\", error.response?.data || error.message);\n            return res.status(500).json({\n                error: error.message,\n                naver: error.response?.data\n            });\n        }\n        res.status(500).json({\n            error: error.message || \"An unexpected error occurred.\",\n            debug: error\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/list_1.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Flist_1&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Flist_1.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();